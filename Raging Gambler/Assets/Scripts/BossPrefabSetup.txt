===== BOSS PREFAB SETUP INSTRUCTIONS =====

Follow these steps to set up the Boss prefab in your Unity project:

1. CREATE THE BASE BOSS OBJECT
   - Right-click in Hierarchy -> Create Empty
   - Rename to "Boss"
   - Add the following components:
     * Sprite Renderer
     * Circle Collider 2D (Radius = 1.5)
     * Rigidbody 2D (Type = Kinematic, Gravity Scale = 0)
     * BossEnemy.cs script

2. CONFIGURE BOSS APPEARANCE
   - Set the Sprite to a square or other simple shape
   - Change Scale to (3, 3, 3) to make it larger
   - Set color to red in Sprite Renderer

3. CREATE PROJECTILE PREFABS
   - Create a "BasicProjectile" prefab:
     * Create Empty -> Rename to "BasicProjectile"
     * Add Sprite Renderer (circle sprite, red color)
     * Add Circle Collider 2D (isTrigger = true)
     * Add Rigidbody 2D (Type = Kinematic)
     * Add BossProjectile.cs script
     * Scale to (0.5, 0.5, 0.5)
     * Drag to Project panel to create prefab

   - Create a "SpreadProjectile" prefab (similar to BasicProjectile):
     * Duplicate BasicProjectile
     * Change color to orange
     * Modify BossProjectile component:
       - Set rotateProjectile = true
       - Set projectileColor = orange

4. CONFIGURE BOSS ENEMY SCRIPT
   - Assign the prefabs:
     * basicProjectilePrefab = BasicProjectile
     * spreadProjectilePrefab = SpreadProjectile
     * minionPrefab = existing Enemy prefab

   - Set attack settings:
     * basicAttackCooldown = 2
     * specialAttackCooldown = 5
     * minionsPerSpawn = 2
     * projectileSpeed = 5
     * aoeProjectileCount = 8
     * aoeRadius = 2

   - Set phase thresholds:
     * phase2HealthThreshold = 0.6
     * phase3HealthThreshold = 0.3

   - Configure colors:
     * phase1Color = red
     * phase2Color = orange
     * phase3Color = purple

5. SETUP BOSS UI
   - Create a Canvas for the boss UI
   - Add a Slider for health bar (position at top of screen)
   - Create a Panel for phase notifications
   - Add Text elements for boss name and phase text
   - Create a BossUI prefab with all these elements

6. CONFIGURE BOSS ROOM
   - Create an empty GameObject named "BossRoomManager"
   - Add BossRoomManager.cs script
   - Assign references:
     * gameManager = your GameManager object
     * bossUIPrefab = the UI prefab from step 5
     * doors = all doors in your boss room
     * bossPrefab = the Boss prefab
     * bossSpawnPoint = empty Transform in center of room

7. INTEGRATE WITH GAME MANAGER
   - The BossRoomManager will call GameManager.EndBossEncounter()
   - Ensure GameManager has:
     * StartBossEncounter()
     * EndBossEncounter()

8. TESTING
   - Place the Boss prefab in your test scene
   - Ensure all references are set
   - Test the boss's phases, projectiles, and health

===== ADDITIONAL NOTES =====

- Tag your Player object as "Player" for targeting to work
- Ensure your player has a component implementing ProjectileMovement.IDamagable
- Add tags to your doors and obstacles for collision detection
- The boss will automatically scale difficulty based on the level
- The AoE attack now uses a pattern of basic projectiles instead of a specialized prefab

===== PREFAB HIERARCHY STRUCTURE =====

Boss (GameObject)
├── Sprite Renderer
├── Circle Collider 2D
├── Rigidbody 2D
└── BossEnemy.cs

BasicProjectile (Prefab)
├── Sprite Renderer
├── Circle Collider 2D
├── Rigidbody 2D
└── BossProjectile.cs

BossUI (Prefab Canvas)
├── Health Slider
├── Phase Panel
│   └── Phase Text
└── Boss Name Text 